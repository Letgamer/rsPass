name: Docker

on:
  workflow_dispatch:
  push:
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Nix
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      # Build the Docker image using Nix flake
      - name: Build Docker image with Nix
        run: nix build .#docker --out-link ./docker-result

      # Log into the Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Push the built Docker image to the registry
      - name: Push Docker image
        run: |
          IMAGE_TAGS=$(
            nix eval --json .#docker.meta.tags | jq -r '.[]' | xargs
          )
          for TAG in ${IMAGE_TAGS}; do
            skopeo copy oci:docker-result docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}
          done
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          REGISTRY: ${{ env.REGISTRY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Sign the resulting Docker image digest
      - name: Sign the published Docker image
        env:
          TAGS: ${{ env.IMAGE_NAME }}
        run: |
          DIGEST=$(skopeo inspect docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --format "{{.Digest}}")
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
