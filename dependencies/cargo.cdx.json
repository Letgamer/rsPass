{
  "bomFormat": "CycloneDX",
  "specVersion": "1.3",
  "version": 1,
  "serialNumber": "urn:uuid:a88b5da1-2d4f-4077-8aaf-19d4ef9ade32",
  "metadata": {
    "timestamp": "2024-11-28T23:32:29.314573327Z",
    "tools": [
      {
        "vendor": "CycloneDX",
        "name": "cargo-cyclonedx",
        "version": "0.5.5"
      }
    ],
    "component": {
      "type": "application",
      "bom-ref": "path+file:///root/secure_coding/backend#backend_rspass@0.1.0",
      "name": "backend_rspass",
      "version": "0.1.0",
      "scope": "required",
      "purl": "pkg:cargo/backend_rspass@0.1.0?download_url=file://.",
      "components": [
        {
          "type": "library",
          "bom-ref": "path+file:///root/secure_coding/backend#backend_rspass@0.1.0 bin-target-0",
          "name": "backend_rspass",
          "version": "0.1.0",
          "purl": "pkg:cargo/backend_rspass@0.1.0?download_url=file://.#src/lib.rs"
        },
        {
          "type": "application",
          "bom-ref": "path+file:///root/secure_coding/backend#backend_rspass@0.1.0 bin-target-1",
          "name": "backend_rspass",
          "version": "0.1.0",
          "purl": "pkg:cargo/backend_rspass@0.1.0?download_url=file://.#src/main.rs"
        }
      ]
    }
  },
  "components": [
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-codec@0.5.2",
      "name": "actix-codec",
      "version": "0.5.2",
      "description": "Codec utilities for working with framed protocols",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5f7b0a21988c1bf877cf4759ef5ddaac04c1c9fe808c9142ecb78ba97d97a28a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-codec@0.5.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-cors@0.7.0",
      "name": "actix-cors",
      "version": "0.7.0",
      "description": "Cross-Origin Resource Sharing (CORS) controls for Actix Web",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f9e772b3bcafe335042b5db010ab7c09013dad6eac4915c91d8d50902769f331"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-cors@0.7.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-extras/tree/master/actix-cors"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-http@3.9.0",
      "name": "actix-http",
      "version": "3.9.0",
      "description": "HTTP types and services for the Actix ecosystem",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d48f96fc3003717aeb9856ca3d02a8c7de502667ad76eeacd830b48d2e91fac4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-http@3.9.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-web"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-macros@0.2.4",
      "name": "actix-macros",
      "version": "0.2.4",
      "description": "Macros for Actix system and runtime",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e01ed3140b2f8d422c68afa1ed2e85d996ea619c988ac834d255db32138655cb"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-macros@0.2.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-router@0.5.3",
      "name": "actix-router",
      "version": "0.5.3",
      "description": "Resource path matching and router",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "13d324164c51f63867b57e73ba5936ea151b8a41a1d23d1031eeb9f70d0236f8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-router@0.5.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-web"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-rt@2.10.0",
      "name": "actix-rt",
      "version": "2.10.0",
      "description": "Tokio-based single-threaded async runtime for the Actix ecosystem",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "24eda4e2a6e042aa4e55ac438a2ae052d3b5da0ecf83d7411e1a368946925208"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-rt@2.10.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-server@2.5.0",
      "name": "actix-server",
      "version": "2.5.0",
      "description": "General purpose TCP server built for the Actix ecosystem",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7ca2549781d8dd6d75c40cf6b6051260a2cc2f3c62343d761a969a0640646894"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-server@2.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net/tree/master/actix-server"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-service@2.0.2",
      "name": "actix-service",
      "version": "2.0.2",
      "description": "Service trait and combinators for representing asynchronous request/response operations.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3b894941f818cfdc7ccc4b9e60fa7e53b5042a2e8567270f9147d5591893373a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-service@2.0.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
      "name": "actix-utils",
      "version": "3.0.1",
      "description": "Various utilities used in the Actix ecosystem",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "88a1dcdff1466e3c2488e1cb5c36a71822750ad43839937f85d2f4d9f8b705d8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-utils@3.0.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-web-codegen@4.3.0",
      "name": "actix-web-codegen",
      "version": "4.3.0",
      "description": "Routing and runtime macros for Actix Web",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f591380e2e68490b5dfaf1dd1aa0ebe78d84ba7067078512b4ea6e4492d622b8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-web-codegen@4.3.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-web"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-web-httpauth@0.8.2",
      "name": "actix-web-httpauth",
      "version": "0.8.2",
      "description": "HTTP authentication schemes for Actix Web",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "456348ed9dcd72a13a1f4a660449fafdecee9ac8205552e286809eb5b0b29bd3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-web-httpauth@0.8.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-extras"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
      "name": "actix-web",
      "version": "4.9.0",
      "description": "Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9180d76e5cc7ccbc4d60a506f2c727730b154010262df5b910eb17dbe4b8cb38"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/actix-web@4.9.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-web"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#addr2line@0.24.2",
      "name": "addr2line",
      "version": "0.24.2",
      "description": "A cross-platform symbolication library written in Rust, using `gimli`",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/addr2line@0.24.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/addr2line"
        },
        {
          "type": "vcs",
          "url": "https://github.com/gimli-rs/addr2line"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0",
      "name": "adler2",
      "version": "2.0.0",
      "description": "A simple clean-room implementation of the Adler-32 checksum",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627"
        }
      ],
      "licenses": [
        {
          "expression": "0BSD OR MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/adler2@2.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/adler2/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/oyvindln/adler2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11",
      "name": "ahash",
      "version": "0.8.11",
      "description": "A non-cryptographic hash function using AES-NI for high performance",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ahash@0.8.11",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ahash"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tkaitchuck/ahash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
      "name": "aho-corasick",
      "version": "1.1.3",
      "description": "Fast multiple substring searching.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/aho-corasick@1.1.3",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/aho-corasick"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/aho-corasick"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#alloc-no-stdlib@2.0.4",
      "name": "alloc-no-stdlib",
      "version": "2.0.4",
      "description": "A dynamic allocator that may be used with or without the stdlib. This allows a package with nostd to allocate memory dynamically and be used either with a custom allocator, items on the stack, or by a package that wishes to simply use Box<>. It also provides options to use calloc or a mutable global variable for pre-zeroed memory",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/alloc-no-stdlib@2.0.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://raw.githubusercontent.com/dropbox/rust-alloc-no-stdlib/master/tests/lib.rs"
        },
        {
          "type": "website",
          "url": "https://github.com/dropbox/rust-alloc-no-stdlib"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dropbox/rust-alloc-no-stdlib"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#alloc-stdlib@0.2.2",
      "name": "alloc-stdlib",
      "version": "0.2.2",
      "description": "A dynamic allocator example that may be used with the stdlib",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/alloc-stdlib@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://raw.githubusercontent.com/dropbox/rust-alloc-no-stdlib/master/alloc-stdlib/tests/lib.rs"
        },
        {
          "type": "website",
          "url": "https://github.com/dropbox/rust-alloc-no-stdlib"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dropbox/rust-alloc-no-stdlib"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anstream@0.6.18",
      "name": "anstream",
      "version": "0.6.18",
      "description": "A simple cross platform library for writing colored text to a terminal.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anstream@0.6.18",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rust-cli/anstyle"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/anstyle.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle-parse@0.2.6",
      "name": "anstyle-parse",
      "version": "0.2.6",
      "description": "Parse ANSI Style Escapes",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anstyle-parse@0.2.6",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rust-cli/anstyle"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/anstyle.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle-query@1.1.2",
      "name": "anstyle-query",
      "version": "1.1.2",
      "description": "Look up colored console capabilities",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anstyle-query@1.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/anstyle.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle-wincon@3.0.6",
      "name": "anstyle-wincon",
      "version": "3.0.6",
      "description": "Styling legacy Windows terminals",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anstyle-wincon@3.0.6",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rust-cli/anstyle"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/anstyle.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.10",
      "name": "anstyle",
      "version": "1.0.10",
      "description": "ANSI text styling",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anstyle@1.0.10",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rust-cli/anstyle"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/anstyle.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#arbitrary@1.4.1",
      "name": "arbitrary",
      "version": "1.4.1",
      "description": "The trait for generating structured data from unstructured data",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "dde20b3d026af13f561bdd0f15edf01fc734f0dafcedbaf42bba506a9517f223"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/arbitrary@1.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/arbitrary/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-fuzz/arbitrary/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
      "name": "autocfg",
      "version": "1.4.0",
      "description": "Automatic cfg for Rust compiler features",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/autocfg@1.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/autocfg/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cuviper/autocfg"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#backtrace@0.3.74",
      "name": "backtrace",
      "version": "0.3.74",
      "description": "A library to acquire a stack trace (backtrace) at runtime in a Rust program. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/backtrace@0.3.74",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/backtrace"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/backtrace-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/backtrace-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
      "name": "base64",
      "version": "0.21.7",
      "description": "encodes and decodes base64 as bytes or utf8",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/base64@0.21.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64"
        },
        {
          "type": "vcs",
          "url": "https://github.com/marshallpierce/rust-base64"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
      "name": "base64",
      "version": "0.22.1",
      "description": "encodes and decodes base64 as bytes or utf8",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/base64@0.22.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64"
        },
        {
          "type": "vcs",
          "url": "https://github.com/marshallpierce/rust-base64"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
      "name": "bitflags",
      "version": "2.6.0",
      "description": "A macro to generate structures which behave like bitflags. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitflags@2.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitflags"
        },
        {
          "type": "website",
          "url": "https://github.com/bitflags/bitflags"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bitflags/bitflags"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
      "name": "block-buffer",
      "version": "0.10.4",
      "description": "Buffer type for block processing of data",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/block-buffer@0.10.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/block-buffer"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#brotli-decompressor@4.0.1",
      "name": "brotli-decompressor",
      "version": "4.0.1",
      "description": "A brotli decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib's allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. Alternatively, --features=unsafe turns off array bounds checks and memory initialization but provides a safe interface for the caller.  Without adding the --features=unsafe argument, all included code is safe. For compression in addition to this library, download https://github.com/dropbox/rust-brotli ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9a45bd2e4095a8b518033b128020dd4a55aab1c0a381ba4404a472630f4bc362"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause OR MIT"
        }
      ],
      "purl": "pkg:cargo/brotli-decompressor@4.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://github.com/dropbox/rust-brotli-decompressor/blob/master/README.md"
        },
        {
          "type": "website",
          "url": "https://github.com/dropbox/rust-brotli-decompressor"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dropbox/rust-brotli-decompressor"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#brotli@6.0.0",
      "name": "brotli",
      "version": "6.0.0",
      "description": "A brotli compressor and decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib's allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. All included code is safe.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "74f7971dbd9326d58187408ab83117d8ac1bb9c17b085fdacd1cf2f598719b6b"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause OR MIT"
        }
      ],
      "purl": "pkg:cargo/brotli@6.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/brotli/"
        },
        {
          "type": "website",
          "url": "https://github.com/dropbox/rust-brotli"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dropbox/rust-brotli"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.16.0",
      "name": "bumpalo",
      "version": "3.16.0",
      "description": "A fast bump allocation arena for Rust.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bumpalo@3.16.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bumpalo"
        },
        {
          "type": "vcs",
          "url": "https://github.com/fitzgen/bumpalo"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
      "name": "byteorder",
      "version": "1.5.0",
      "description": "Library for reading/writing numbers in big-endian and little-endian.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/byteorder@1.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/byteorder"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/byteorder"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/byteorder"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
      "name": "bytes",
      "version": "1.9.0",
      "description": "Types and traits for working with bytes",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/bytes@1.9.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/bytes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bytestring@1.4.0",
      "name": "bytestring",
      "version": "1.4.0",
      "description": "A UTF-8 encoded read-only string using `Bytes` as storage",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e465647ae23b2823b0753f50decb2d5a86d2bb2cac04788fafd1f80e45378e5f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bytestring@1.4.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://actix.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.1",
      "name": "cc",
      "version": "1.2.1",
      "description": "A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to compile native C code into a static archive to be linked into Rust code. ",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "fd9de9f2205d5ef3fd67e685b0df337994ddd4495e2a28d185500d0e1edfea47"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cc@1.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cc"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/cc-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/cc-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
      "name": "cfg-if",
      "version": "1.0.0",
      "description": "A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cfg-if@1.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cfg-if"
        },
        {
          "type": "website",
          "url": "https://github.com/alexcrichton/cfg-if"
        },
        {
          "type": "vcs",
          "url": "https://github.com/alexcrichton/cfg-if"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#colorchoice@1.0.3",
      "name": "colorchoice",
      "version": "1.0.3",
      "description": "Global override of color control",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/colorchoice@1.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/anstyle.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#convert_case@0.4.0",
      "name": "convert_case",
      "version": "0.4.0",
      "description": "Convert strings into any case",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/convert_case@0.4.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rutrum/convert-case"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.16.2",
      "name": "cookie",
      "version": "0.16.2",
      "description": "HTTP cookie parsing and cookie jar management. Supports signed and private (encrypted, authenticated) jars. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e859cd57d0710d9e06c381b550c06e76992472a8c6d527aecd2fc673dcc231fb"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cookie@0.16.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cookie"
        },
        {
          "type": "vcs",
          "url": "https://github.com/SergioBenitez/cookie-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.16",
      "name": "cpufeatures",
      "version": "0.2.16",
      "description": "Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets,  with no_std support and support for mobile targets including Android and iOS ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cpufeatures@0.2.16",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cpufeatures"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
      "name": "crc32fast",
      "version": "1.4.2",
      "description": "Fast, SIMD-accelerated CRC32 (IEEE) checksum computation",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crc32fast@1.4.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/srijs/rust-crc32fast"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
      "name": "crossbeam-utils",
      "version": "0.8.20",
      "description": "Utilities for concurrent programming",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-utils@0.8.20",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
      "name": "crypto-common",
      "version": "0.1.6",
      "description": "Common cryptographic traits",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crypto-common@0.1.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crypto-common"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
      "name": "darling",
      "version": "0.20.10",
      "description": "A proc-macro library for reading attributes into structs when implementing custom derives. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling@0.20.10",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/darling/0.20.10"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
      "name": "darling_core",
      "version": "0.20.10",
      "description": "Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_core@0.20.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.10",
      "name": "darling_macro",
      "version": "0.20.10",
      "description": "Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_macro@0.20.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#deranged@0.3.11",
      "name": "deranged",
      "version": "0.3.11",
      "description": "Ranged integers",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/deranged@0.3.11",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/deranged"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#derive_arbitrary@1.4.1",
      "name": "derive_arbitrary",
      "version": "1.4.1",
      "description": "Derives arbitrary traits",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "30542c1ad912e0e3d22a1935c290e12e8a29d704a420177a31faad4a601a0800"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/derive_arbitrary@1.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/arbitrary/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-fuzz/arbitrary"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#derive_more@0.99.18",
      "name": "derive_more",
      "version": "0.99.18",
      "description": "Adds #[derive(x)] macros for more traits",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5f33878137e4dafd7fa914ad4e259e18a4e8e532b9617a2d0150262bf53abfce"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/derive_more@0.99.18",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://jeltef.github.io/derive_more/derive_more/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/JelteF/derive_more"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
      "name": "digest",
      "version": "0.10.7",
      "description": "Traits for cryptographic hash functions and message authentication codes",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/digest@0.10.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/digest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
      "name": "displaydoc",
      "version": "0.2.5",
      "description": "A derive macro for implementing the display Trait via a doc comment and string interpolation ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/displaydoc@0.2.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/displaydoc"
        },
        {
          "type": "website",
          "url": "https://github.com/yaahc/displaydoc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/yaahc/displaydoc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#dotenv@0.15.0",
      "name": "dotenv",
      "version": "0.15.0",
      "description": "A `dotenv` implementation for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/dotenv@0.15.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/dotenv-rs/dotenv"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dotenv-rs/dotenv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
      "name": "encoding_rs",
      "version": "0.8.35",
      "description": "A Gecko-oriented implementation of the Encoding Standard",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3"
        }
      ],
      "licenses": [
        {
          "expression": "(Apache-2.0 OR MIT) AND BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/encoding_rs@0.8.35",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/encoding_rs/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/encoding_rs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/encoding_rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#env_filter@0.1.2",
      "name": "env_filter",
      "version": "0.1.2",
      "description": "Filter log events using environment variables ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4f2c92ceda6ceec50f43169f9ee8424fe2db276791afde7b2cd8bc084cb376ab"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/env_filter@0.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/env_logger"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#env_logger@0.11.5",
      "name": "env_logger",
      "version": "0.11.5",
      "description": "A logging implementation for `log` which is configured via an environment variable. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e13fa619b91fb2381732789fc5de83b45675e882f66623b7d8cb4f643017018d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/env_logger@0.11.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-cli/env_logger"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
      "name": "equivalent",
      "version": "1.0.1",
      "description": "Traits for key comparison in maps.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/equivalent@1.0.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/cuviper/equivalent"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fallible-iterator@0.3.0",
      "name": "fallible-iterator",
      "version": "0.3.0",
      "description": "Fallible iterator traits",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2acce4a10f12dc2fb14a218589d4f1f62ef011b2d0cc4b3cb1bba8e94da14649"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/fallible-iterator@0.3.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/sfackler/rust-fallible-iterator"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fallible-streaming-iterator@0.1.9",
      "name": "fallible-streaming-iterator",
      "version": "0.1.9",
      "description": "Fallible streaming iteration",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7360491ce676a36bf9bb3c56c1aa791658183a54d2744120f27285738d90465a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/fallible-streaming-iterator@0.1.9",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/sfackler/fallible-streaming-iterator"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.0.35",
      "name": "flate2",
      "version": "1.0.35",
      "description": "DEFLATE compression and decompression exposed as Read/BufRead/Write streams. Supports miniz_oxide and multiple zlib implementations. Supports zlib, gzip, and raw deflate streams. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/flate2@1.0.35",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/flate2"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/flate2-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/flate2-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
      "name": "fnv",
      "version": "1.0.7",
      "description": "Fowler–Noll–Vo hash function",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0  OR  MIT"
        }
      ],
      "purl": "pkg:cargo/fnv@1.0.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://doc.servo.org/fnv/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-fnv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
      "name": "form_urlencoded",
      "version": "1.2.1",
      "description": "Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/form_urlencoded@1.2.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
      "name": "futures-core",
      "version": "0.3.31",
      "description": "The core traits and types in for the `futures` library. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-core@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
      "name": "futures-sink",
      "version": "0.3.31",
      "description": "The asynchronous `Sink` trait for the futures-rs library. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-sink@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
      "name": "futures-task",
      "version": "0.3.31",
      "description": "Tools for working with tasks. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-task@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
      "name": "futures-util",
      "version": "0.3.31",
      "description": "Common utilities and extension traits for the futures-rs library. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-util@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
      "name": "generic-array",
      "version": "0.14.7",
      "description": "Generic types implementing functionality of arrays",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/generic-array@0.14.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://fizyk20.github.io/generic-array/generic_array/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/fizyk20/generic-array.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
      "name": "getrandom",
      "version": "0.2.15",
      "description": "A small cross-platform library for retrieving random data from system source",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/getrandom@0.2.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/getrandom"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/getrandom"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#gimli@0.31.1",
      "name": "gimli",
      "version": "0.31.1",
      "description": "A library for reading and writing the DWARF debugging format.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/gimli@0.31.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/gimli"
        },
        {
          "type": "vcs",
          "url": "https://github.com/gimli-rs/gimli"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.26",
      "name": "h2",
      "version": "0.3.26",
      "description": "An HTTP/2 client and server",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "81fe527a889e1532da5c525686d96d4c2e74cdd345badf8dfef9f6b39dd5f5e8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/h2@0.3.26",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/h2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/h2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
      "name": "hashbrown",
      "version": "0.14.5",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.14.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
      "name": "hashbrown",
      "version": "0.15.2",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.15.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashlink@0.9.1",
      "name": "hashlink",
      "version": "0.9.1",
      "description": "HashMap-like containers that hold their key-value pairs in a user controllable order",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6ba4ff7128dee98c7dc9794b6a411377e1404dba1c97deb8d1a55297bd25d8af"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashlink@0.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hashlink"
        },
        {
          "type": "vcs",
          "url": "https://github.com/kyren/hashlink"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hermit-abi@0.3.9",
      "name": "hermit-abi",
      "version": "0.3.9",
      "description": "Hermit system calls definitions.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hermit-abi@0.3.9",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/hermit-os/hermit-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
      "name": "http",
      "version": "0.2.12",
      "description": "A set of types for representing HTTP requests and responses. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "601cbb57e577e2f5ef5be8e7b83f0f63994f25aa94d673e54a92d5c516d101f1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/http@0.2.12",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/http"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/http"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
      "name": "httparse",
      "version": "1.9.5",
      "description": "A tiny, safe, speedy, zero-copy HTTP/1.x parser.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/httparse@1.9.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/httparse"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/httparse"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
      "name": "httpdate",
      "version": "1.0.3",
      "description": "HTTP date parsing and formatting",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/httpdate@1.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/pyfisch/httpdate"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#humantime@2.1.0",
      "name": "humantime",
      "version": "2.1.0",
      "description": "    A parser and formatter for std::time::{Duration, SystemTime} ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/humantime@2.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/humantime"
        },
        {
          "type": "website",
          "url": "https://github.com/tailhook/humantime"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tailhook/humantime"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_collections@1.5.0",
      "name": "icu_collections",
      "version": "1.5.0",
      "description": "Collection of API for use in ICU libraries.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_collections@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locid@1.5.0",
      "name": "icu_locid",
      "version": "1.5.0",
      "description": "API for managing Unicode Language and Locale Identifiers",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_locid@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locid_transform@1.5.0",
      "name": "icu_locid_transform",
      "version": "1.5.0",
      "description": "API for Unicode Language and Locale Identifiers canonicalization",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_locid_transform@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locid_transform_data@1.5.0",
      "name": "icu_locid_transform_data",
      "version": "1.5.0",
      "description": "Data for the icu_locid_transform crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_locid_transform_data@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@1.5.0",
      "name": "icu_normalizer",
      "version": "1.5.0",
      "description": "API for normalizing text into Unicode Normalization Forms",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_normalizer@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@1.5.0",
      "name": "icu_normalizer_data",
      "version": "1.5.0",
      "description": "Data for the icu_normalizer crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_normalizer_data@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties@1.5.1",
      "name": "icu_properties",
      "version": "1.5.1",
      "description": "Definitions for Unicode properties",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_properties@1.5.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@1.5.0",
      "name": "icu_properties_data",
      "version": "1.5.0",
      "description": "Data for the icu_properties crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_properties_data@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_provider@1.5.0",
      "name": "icu_provider",
      "version": "1.5.0",
      "description": "Trait and struct definitions for the ICU data provider",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_provider@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_provider_macros@1.5.0",
      "name": "icu_provider_macros",
      "version": "1.5.0",
      "description": "Proc macros for ICU data providers",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_provider_macros@1.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
      "name": "ident_case",
      "version": "1.0.1",
      "description": "Utility for applying case rules to Rust identifiers.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ident_case@1.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ident_case/1.0.1"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/ident_case"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
      "name": "idna",
      "version": "1.0.3",
      "description": "IDNA (Internationalizing Domain Names in Applications) and Punycode.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/idna@1.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.0",
      "name": "idna_adapter",
      "version": "1.2.0",
      "description": "Back end adapter for idna",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/idna_adapter@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/idna_adapter/latest/idna_adapter/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/crate/idna_adapter/latest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/idna_adapter"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#impl-more@0.1.8",
      "name": "impl-more",
      "version": "0.1.8",
      "description": "Concise, declarative trait implementation macros",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "aae21c3177a27788957044151cc2800043d127acaa460a47ebb9b84dfa2c6aa0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/impl-more@0.1.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/robjtede/impl-more"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.6.0",
      "name": "indexmap",
      "version": "2.6.0",
      "description": "A hash table with consistent order and fast iteration.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/indexmap@2.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indexmap/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/indexmap-rs/indexmap"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#is_terminal_polyfill@1.70.1",
      "name": "is_terminal_polyfill",
      "version": "1.70.1",
      "description": "Polyfill for `is_terminal` stdlib feature for use with older MSRVs",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/is_terminal_polyfill@1.70.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/polyfill-rs/is_terminal_polyfill"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
      "name": "itoa",
      "version": "1.0.14",
      "description": "Fast integer primitive to string conversion",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/itoa@1.0.14",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/itoa"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/itoa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.32",
      "name": "jobserver",
      "version": "0.1.32",
      "description": "An implementation of the GNU Make jobserver for Rust. ",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/jobserver@0.1.32",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/jobserver"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/jobserver-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/jobserver-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.72",
      "name": "js-sys",
      "version": "0.3.72",
      "description": "Bindings for all JS global objects and functions in all JS environments like Node.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/js-sys@0.3.72",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/js-sys"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/js-sys"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#jsonwebtoken@9.3.0",
      "name": "jsonwebtoken",
      "version": "9.3.0",
      "description": "Create and decode JWTs in a strongly typed way.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b9ae10193d25051e74945f1ea2d0b42e03cc3b890f7e4cc5faa44997d808193f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/jsonwebtoken@9.3.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/Keats/jsonwebtoken"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Keats/jsonwebtoken"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#language-tags@0.3.2",
      "name": "language-tags",
      "version": "0.3.2",
      "description": "Language tags for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d4345964bb142484797b161f473a503a434de77149dd8c7427788c6e13379388"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/language-tags@0.3.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/pyfisch/rust-language-tags"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
      "name": "libc",
      "version": "0.2.166",
      "description": "Raw FFI bindings to platform libraries like libc. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c2ccc108bbc0b1331bd061864e7cd823c0cab660bbe6970e66e2c0614decde36"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libc@0.2.166",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/libc/"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/libc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/libc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.30.1",
      "name": "libsqlite3-sys",
      "version": "0.30.1",
      "description": "Native bindings to the libsqlite3 library",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2e99fb7a497b1e3339bc746195567ed8d3e24945ecd636e3619d20b9de9e9149"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/libsqlite3-sys@0.30.1",
      "externalReferences": [
        {
          "type": "other",
          "url": "sqlite3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rusqlite/rusqlite"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#litemap@0.7.4",
      "name": "litemap",
      "version": "0.7.4",
      "description": "A key-value Map implementation based on a flat, sorted Vec.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/litemap@0.7.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/litemap"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#local-channel@0.1.5",
      "name": "local-channel",
      "version": "0.1.5",
      "description": "A non-threadsafe multi-producer, single-consumer, futures-aware, FIFO queue",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b6cbc85e69b8df4b8bb8b89ec634e7189099cea8927a276b7384ce5488e53ec8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/local-channel@0.1.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#local-waker@0.1.4",
      "name": "local-waker",
      "version": "0.1.4",
      "description": "A synchronization primitive for thread-local task wakeup",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4d873d7c67ce09b42110d801813efbc9364414e356be9935700d368351657487"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/local-waker@0.1.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/actix/actix-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
      "name": "lock_api",
      "version": "0.4.12",
      "description": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lock_api@0.4.12",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lockfree-object-pool@0.1.6",
      "name": "lockfree-object-pool",
      "version": "0.1.6",
      "description": "A thread-safe object pool collection with automatic return and attach/detach semantics.",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9374ef4228402d4b7e403e5838cb880d9ee663314b0a900d5a6aabf0c213552e"
        }
      ],
      "licenses": [
        {
          "expression": "BSL-1.0"
        }
      ],
      "purl": "pkg:cargo/lockfree-object-pool@0.1.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/lockfree-object-pool"
        },
        {
          "type": "website",
          "url": "https://github.com/EVaillant/lockfree-object-pool"
        },
        {
          "type": "vcs",
          "url": "https://github.com/EVaillant/lockfree-object-pool"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
      "name": "log",
      "version": "0.4.22",
      "description": "A lightweight logging facade for Rust ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/log@0.4.22",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/log"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/log"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
      "name": "memchr",
      "version": "2.7.4",
      "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/memchr@2.7.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/memchr/"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/memchr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/memchr"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
      "name": "mime",
      "version": "0.3.17",
      "description": "Strongly Typed Mimes",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/mime@0.3.17",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/mime"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/mime"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#mime_guess@2.0.5",
      "name": "mime_guess",
      "version": "2.0.5",
      "description": "A simple crate for detection of a file's MIME type by its extension.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f7c44f8e672c00fe5308fa235f821cb4198414e1c77935c1ab6948d3fd78550e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/mime_guess@2.0.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/mime_guess/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/abonander/mime_guess"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.0",
      "name": "miniz_oxide",
      "version": "0.8.0",
      "description": "DEFLATE compression and decompression library rewritten in Rust based on miniz",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Zlib OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/miniz_oxide@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/miniz_oxide"
        },
        {
          "type": "website",
          "url": "https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.2",
      "name": "mio",
      "version": "1.0.2",
      "description": "Lightweight non-blocking I/O.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/mio@1.0.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/tokio-rs/mio"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/mio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
      "name": "num-bigint",
      "version": "0.4.6",
      "description": "Big integer implementation for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-bigint@0.4.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-bigint"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-bigint"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-bigint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
      "name": "num-conv",
      "version": "0.1.0",
      "description": "`num_conv` is a crate to convert between integer types without using `as` casts. This provides better certainty when refactoring, makes the exact behavior of code more explicit, and allows using turbofish syntax. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-conv@0.1.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/num-conv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
      "name": "num-integer",
      "version": "0.1.46",
      "description": "Integer traits and functions",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-integer@0.1.46",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-integer"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-integer"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-integer"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
      "name": "num-traits",
      "version": "0.2.19",
      "description": "Numeric traits for generic mathematics",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-traits@0.2.19",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-traits"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-traits"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#object@0.36.5",
      "name": "object",
      "version": "0.36.5",
      "description": "A unified interface for reading and writing object file formats.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/object@0.36.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/gimli-rs/object"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
      "name": "once_cell",
      "version": "1.20.2",
      "description": "Single assignment cells and lazy values.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/once_cell@1.20.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/once_cell"
        },
        {
          "type": "vcs",
          "url": "https://github.com/matklad/once_cell"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
      "name": "parking_lot",
      "version": "0.12.3",
      "description": "More compact and efficient implementations of the standard synchronization primitives.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/parking_lot@0.12.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
      "name": "parking_lot_core",
      "version": "0.9.10",
      "description": "An advanced API for creating custom synchronization primitives.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/parking_lot_core@0.9.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
      "name": "paste",
      "version": "1.0.15",
      "description": "Macros for all your token pasting needs",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/paste@1.0.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/paste"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/paste"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pem@3.0.4",
      "name": "pem",
      "version": "3.0.4",
      "description": "Parse and encode PEM-encoded data.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8e459365e590736a54c3fa561947c84837534b8e9af6fc5bf781307e82658fae"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/pem@3.0.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pem/"
        },
        {
          "type": "website",
          "url": "https://github.com/jcreekmore/pem-rs.git"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jcreekmore/pem-rs.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
      "name": "percent-encoding",
      "version": "2.3.1",
      "description": "Percent encoding and decoding",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/percent-encoding@2.3.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
      "name": "pin-project-lite",
      "version": "0.2.15",
      "description": "A lightweight version of pin-project written with declarative macros. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pin-project-lite@0.2.15",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/pin-project-lite"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
      "name": "pin-utils",
      "version": "0.1.0",
      "description": "Utilities for pinning ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pin-utils@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pin-utils"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang-nursery/pin-utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.31",
      "name": "pkg-config",
      "version": "0.3.31",
      "description": "A library to run the pkg-config system tool at build time in order to be used in Cargo build scripts. ",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pkg-config@0.3.31",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pkg-config"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/pkg-config-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
      "name": "powerfmt",
      "version": "0.2.0",
      "description": "    `powerfmt` is a library that provides utilities for formatting values. This crate makes it     significantly easier to support filling to a minimum width with alignment, avoid heap     allocation, and avoid repetitive calculations. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/powerfmt@0.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/powerfmt"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.20",
      "name": "ppv-lite86",
      "version": "0.2.20",
      "description": "Implementation of the crypto-simd API for x86",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ppv-lite86@0.2.20",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/cryptocorrosion/cryptocorrosion"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0",
      "name": "proc-macro-error-attr2",
      "version": "2.0.0",
      "description": "Attribute macro for the proc-macro-error2 crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "96de42df36bb9bba5542fe9f1a054b8cc87e172759a1868aa05c1f3acc89dfc5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-error-attr2@2.0.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/GnomedDev/proc-macro-error-2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1",
      "name": "proc-macro-error2",
      "version": "2.0.1",
      "description": "Almost drop-in replacement to panics in proc-macros",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "11ec05c52be0a07b08061f7dd003e7d7092e0472bc731b4af7bb1ef876109802"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-error2@2.0.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/GnomedDev/proc-macro-error-2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
      "name": "proc-macro2",
      "version": "1.0.92",
      "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro2@1.0.92",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/proc-macro2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/proc-macro2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
      "name": "quote",
      "version": "1.0.37",
      "description": "Quasi-quoting macro quote!(...)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quote@1.0.37",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/quote/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/quote"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
      "name": "rand",
      "version": "0.8.5",
      "description": "Random number generators and other randomness functionality. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand@0.8.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
      "name": "rand_chacha",
      "version": "0.3.1",
      "description": "ChaCha random number generator ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_chacha@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_chacha"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
      "name": "rand_core",
      "version": "0.6.4",
      "description": "Core random number generator traits and tools for implementation. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_core@0.6.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_core"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#redox_syscall@0.5.7",
      "name": "redox_syscall",
      "version": "0.5.7",
      "description": "A Rust library to access raw Redox system calls",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/redox_syscall@0.5.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/redox_syscall"
        },
        {
          "type": "vcs",
          "url": "https://gitlab.redox-os.org/redox-os/syscall"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
      "name": "regex-automata",
      "version": "0.4.9",
      "description": "Automata construction and matching using regular expressions.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex-automata@0.4.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-automata"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex/tree/master/regex-automata"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-lite@0.1.6",
      "name": "regex-lite",
      "version": "0.1.6",
      "description": "A lightweight regex engine that optimizes for binary size and compilation time. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "53a49587ad06b26609c52e423de037e7f57f20d53535d66e08c695f347df952a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex-lite@0.1.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-lite"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex/tree/master/regex-lite"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5",
      "name": "regex-syntax",
      "version": "0.8.5",
      "description": "A regular expression parser.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex-syntax@0.8.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-syntax"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex/tree/master/regex-syntax"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
      "name": "regex",
      "version": "1.11.1",
      "description": "An implementation of regular expressions for Rust. This implementation uses finite automata and guarantees linear time matching on all inputs. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex@1.11.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/regex"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
      "name": "ring",
      "version": "0.17.8",
      "description": "Safe, fast, small crypto using Rust.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d"
        }
      ],
      "licenses": [
        {
          "license": {
            "name": "Unknown",
            "text": {
              "encoding": "base64",
              "content": ""
            }
          }
        }
      ],
      "purl": "pkg:cargo/ring@0.17.8",
      "externalReferences": [
        {
          "type": "other",
          "url": "ring_core_0_17_8"
        },
        {
          "type": "vcs",
          "url": "https://github.com/briansmith/ring"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rusqlite@0.32.1",
      "name": "rusqlite",
      "version": "0.32.1",
      "description": "Ergonomic wrapper for SQLite",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7753b721174eb8ff87a9a0e799e2d7bc3749323e773db92e0984debb00019d6e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/rusqlite@0.32.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rusqlite/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rusqlite/rusqlite"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rust-embed-impl@8.5.0",
      "name": "rust-embed-impl",
      "version": "8.5.0",
      "description": "Rust Custom Derive Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6125dbc8867951125eec87294137f4e9c2c96566e61bf72c45095a7c77761478"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/rust-embed-impl@8.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rust-embed"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyros2097/rust-embed"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rust-embed-utils@8.5.0",
      "name": "rust-embed-utils",
      "version": "8.5.0",
      "description": "Utilities for rust-embed",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2e5347777e9aacb56039b0e1f28785929a8a3b709e87482e7442c72e7c12529d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/rust-embed-utils@8.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rust-embed"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyros2097/rust-embed"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rust-embed@8.5.0",
      "name": "rust-embed",
      "version": "8.5.0",
      "description": "Rust Custom Derive Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "fa66af4a4fdd5e7ebc276f115e895611a34739a9c1c01028383d612d550953c0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/rust-embed@8.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rust-embed"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyros2097/rust-embed"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustc-demangle@0.1.24",
      "name": "rustc-demangle",
      "version": "0.1.24",
      "description": "Rust compiler symbol demangling. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustc-demangle@0.1.24",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustc-demangle"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/rustc-demangle"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/rustc-demangle"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
      "name": "rustc_version",
      "version": "0.4.1",
      "description": "A library for querying the version of a installed rustc compiler",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustc_version@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustc_version/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/djc/rustc-version-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
      "name": "ryu",
      "version": "1.0.18",
      "description": "Fast floating point to string conversion",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR BSL-1.0"
        }
      ],
      "purl": "pkg:cargo/ryu@1.0.18",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ryu"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/ryu"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#same-file@1.0.6",
      "name": "same-file",
      "version": "1.0.6",
      "description": "A simple crate for determining whether two file paths point to the same file. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/same-file@1.0.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/same-file"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/same-file"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/same-file"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
      "name": "scopeguard",
      "version": "1.2.0",
      "description": "A RAII scope guard that will run a given closure when it goes out of scope, even if the code between panics (assuming unwinding panic).  Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as shorthands for guards with one of the implemented strategies. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/scopeguard@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/scopeguard/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/scopeguard"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.23",
      "name": "semver",
      "version": "1.0.23",
      "description": "Parser and evaluator for Cargo's flavor of Semantic Versioning",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/semver@1.0.23",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/semver"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/semver"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
      "name": "serde",
      "version": "1.0.215",
      "description": "A generic serialization/deserialization framework",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde@1.0.215",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.215",
      "name": "serde_derive",
      "version": "1.0.215",
      "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_derive@1.0.215",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://serde.rs/derive.html"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
      "name": "serde_json",
      "version": "1.0.133",
      "description": "A JSON serialization file format",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c7fceb2473b9166b2294ef05efcb65a3db80803f0b03ef86a5fc88a2b85ee377"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_json@1.0.133",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_json"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/json"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
      "name": "serde_urlencoded",
      "version": "0.7.1",
      "description": "`x-www-form-urlencoded` meets Serde",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_urlencoded@0.7.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_urlencoded/0.7.1/serde_urlencoded/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/nox/serde_urlencoded"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
      "name": "sha1",
      "version": "0.10.6",
      "description": "SHA-1 hash function",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha1@0.10.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha1"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
      "name": "sha2",
      "version": "0.10.8",
      "description": "Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, and SHA-512. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha2@0.10.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
      "name": "shlex",
      "version": "1.3.0",
      "description": "Split a string into shell words, like Python's shlex.",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/shlex@1.3.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/comex/rust-shlex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.2",
      "name": "signal-hook-registry",
      "version": "1.4.2",
      "description": "Backend crate for signal-hook",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/signal-hook-registry@1.4.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/signal-hook-registry"
        },
        {
          "type": "vcs",
          "url": "https://github.com/vorner/signal-hook"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
      "name": "simd-adler32",
      "version": "0.3.7",
      "description": "A SIMD-accelerated Adler-32 hash algorithm implementation.",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/simd-adler32@0.3.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mcountryman/simd-adler32"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.6.2",
      "name": "simple_asn1",
      "version": "0.6.2",
      "description": "A simple DER/ASN.1 encoding/decoding library.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085"
        }
      ],
      "licenses": [
        {
          "expression": "ISC"
        }
      ],
      "purl": "pkg:cargo/simple_asn1@0.6.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/acw/simple_asn1"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
      "name": "slab",
      "version": "0.4.9",
      "description": "Pre-allocated storage for a uniform data type",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/slab@0.4.9",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/slab"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
      "name": "smallvec",
      "version": "1.13.2",
      "description": "'Small vector' optimization: store up to a small number of items on the stack",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/smallvec@1.13.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/smallvec/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-smallvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
      "name": "socket2",
      "version": "0.5.8",
      "description": "Utilities for handling networking sockets with a maximal amount of configuration possible intended. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/socket2@0.5.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/socket2"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/socket2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/socket2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
      "name": "spin",
      "version": "0.9.8",
      "description": "Spin-based synchronization primitives",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/spin@0.9.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mvdnes/spin-rs.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
      "name": "stable_deref_trait",
      "version": "1.2.0",
      "description": "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/stable_deref_trait@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/stable_deref_trait/1.2.0/stable_deref_trait"
        },
        {
          "type": "vcs",
          "url": "https://github.com/storyyeller/stable_deref_trait"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
      "name": "strsim",
      "version": "0.11.1",
      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strsim@0.11.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strsim/"
        },
        {
          "type": "website",
          "url": "https://github.com/rapidfuzz/strsim-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rapidfuzz/strsim-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
      "name": "syn",
      "version": "2.0.89",
      "description": "Parser for Rust source code",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/syn@2.0.89",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/syn"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/syn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.1",
      "name": "synstructure",
      "version": "0.13.1",
      "description": "Helper methods and macros for custom derives",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/synstructure@0.13.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/synstructure"
        },
        {
          "type": "vcs",
          "url": "https://github.com/mystor/synstructure"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
      "name": "thiserror-impl",
      "version": "1.0.69",
      "description": "Implementation detail of the `thiserror` crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror-impl@1.0.69",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.3",
      "name": "thiserror-impl",
      "version": "2.0.3",
      "description": "Implementation detail of the `thiserror` crate",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f077553d607adc1caf65430528a576c757a71ed73944b66ebb58ef2bbd243568"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror-impl@2.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
      "name": "thiserror",
      "version": "1.0.69",
      "description": "derive(Error)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror@1.0.69",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/thiserror"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
      "name": "thiserror",
      "version": "2.0.3",
      "description": "derive(Error)",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c006c85c7651b3cf2ada4584faa36773bd07bac24acfb39f3c431b36d7e667aa"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror@2.0.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/thiserror"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
      "name": "time-core",
      "version": "0.1.2",
      "description": "This crate is an implementation detail and should not be relied upon directly.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/time-core@0.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/time-rs/time"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.18",
      "name": "time-macros",
      "version": "0.2.18",
      "description": "    Procedural macros for the time crate.     This crate is an implementation detail and should not be relied upon directly. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/time-macros@0.2.18",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/time-rs/time"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#time@0.3.36",
      "name": "time",
      "version": "0.3.36",
      "description": "Date and time library. Fully interoperable with the standard library. Mostly compatible with #![no_std].",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/time@0.3.36",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://time-rs.github.io"
        },
        {
          "type": "vcs",
          "url": "https://github.com/time-rs/time"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.7.6",
      "name": "tinystr",
      "version": "0.7.6",
      "description": "A small ASCII-only bounded length string representation.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/tinystr@0.7.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.12",
      "name": "tokio-util",
      "version": "0.7.12",
      "description": "Additional utilities for working with Tokio. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tokio-util@0.7.12",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tokio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
      "name": "tokio",
      "version": "1.41.1",
      "description": "An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tokio@1.41.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tokio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33",
      "name": "tracing-core",
      "version": "0.1.33",
      "description": "Core primitives for application-level tracing. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing-core@0.1.33",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
      "name": "tracing",
      "version": "0.1.41",
      "description": "Application-level tracing for Rust. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing@0.1.41",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
      "name": "typenum",
      "version": "1.17.0",
      "description": "Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supports bits, unsigned integers, and signed     integers. It also provides a type-level array of type-level numbers, but its     implementation is incomplete.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/typenum@1.17.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/typenum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/paholg/typenum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unicase@2.8.0",
      "name": "unicase",
      "version": "2.8.0",
      "description": "A case-insensitive wrapper around strings.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7e51b68083f157f853b6379db119d1c1be0e6e4dec98101079dec41f6f5cf6df"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/unicase@2.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/unicase"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/unicase"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14",
      "name": "unicode-ident",
      "version": "1.0.14",
      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83"
        }
      ],
      "licenses": [
        {
          "expression": "(MIT OR Apache-2.0) AND Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/unicode-ident@1.0.14",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/unicode-ident"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/unicode-ident"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
      "name": "untrusted",
      "version": "0.9.0",
      "description": "Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1"
        }
      ],
      "licenses": [
        {
          "expression": "ISC"
        }
      ],
      "purl": "pkg:cargo/untrusted@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://briansmith.org/rustdoc/untrusted/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/briansmith/untrusted"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
      "name": "url",
      "version": "2.5.4",
      "description": "URL library for Rust, based on the WHATWG URL Standard",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/url@2.5.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/url"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utf16_iter@1.0.5",
      "name": "utf16_iter",
      "version": "1.0.5",
      "description": "Iterator by char over potentially-invalid UTF-16 in &[u16]",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/utf16_iter@1.0.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/utf16_iter/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/utf16_iter/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/utf16_iter"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
      "name": "utf8_iter",
      "version": "1.0.4",
      "description": "Iterator by char over potentially-invalid UTF-8 in &[u8]",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/utf8_iter@1.0.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/utf8_iter/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/utf8_iter/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/utf8_iter"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utf8parse@0.2.2",
      "name": "utf8parse",
      "version": "0.2.2",
      "description": "Table-driven UTF-8 parser",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/utf8parse@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/utf8parse/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/alacritty/vte"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-actix-web@0.1.2",
      "name": "utoipa-actix-web",
      "version": "0.1.2",
      "description": "Utoipa's actix-web bindings for seamless integration of the two",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b7eda9c23c05af0fb812f6a177514047331dac4851a2c8e9c4b895d6d826967f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/utoipa-actix-web@0.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/juhaku/utoipa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-gen@5.2.0",
      "name": "utoipa-gen",
      "version": "5.2.0",
      "description": "Code generation implementation for utoipa",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5629efe65599d0ccd5d493688cbf6e03aa7c1da07fe59ff97cf5977ed0637f66"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/utoipa-gen@5.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/juhaku/utoipa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-swagger-ui-vendored@0.1.2",
      "name": "utoipa-swagger-ui-vendored",
      "version": "0.1.2",
      "description": "Vendored Swagger UI for utoipa",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e2eebbbfe4093922c2b6734d7c679ebfebd704a0d7e56dfcb0d05818ce28977d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/utoipa-swagger-ui-vendored@0.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/juhaku/utoipa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-swagger-ui@8.0.3",
      "name": "utoipa-swagger-ui",
      "version": "8.0.3",
      "description": "Swagger UI for utoipa",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a5c80b4dd79ea382e8374d67dcce22b5c6663fa13a82ad3886441d1bbede5e35"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/utoipa-swagger-ui@8.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/juhaku/utoipa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa@5.2.0",
      "name": "utoipa",
      "version": "5.2.0",
      "description": "Compile time generated OpenAPI documentation for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "514a48569e4e21c86d0b84b5612b5e73c0b2cf09db63260134ba426d4e8ea714"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/utoipa@5.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/juhaku/utoipa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#uuid@1.11.0",
      "name": "uuid",
      "version": "1.11.0",
      "description": "A library to generate and parse UUIDs.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/uuid@1.11.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/uuid"
        },
        {
          "type": "website",
          "url": "https://github.com/uuid-rs/uuid"
        },
        {
          "type": "vcs",
          "url": "https://github.com/uuid-rs/uuid"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#validator@0.19.0",
      "name": "validator",
      "version": "0.19.0",
      "description": "Common validation functions (email, url, length, ...) and trait - to be used with `validator_derive`",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d0b4a29d8709210980a09379f27ee31549b73292c87ab9899beee1c0d3be6303"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/validator@0.19.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/Keats/validator"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Keats/validator"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#validator_derive@0.19.0",
      "name": "validator_derive",
      "version": "0.19.0",
      "description": "Macros 1.1 implementation of #[derive(Validate)]",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "bac855a2ce6f843beb229757e6e570a42e837bcb15e5f449dd48d5747d41bf77"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/validator_derive@0.19.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/Keats/validator"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Keats/validator"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15",
      "name": "vcpkg",
      "version": "0.2.15",
      "description": "A library to find native dependencies in a vcpkg tree at build time in order to be used in Cargo build scripts. ",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/vcpkg@0.2.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/vcpkg"
        },
        {
          "type": "vcs",
          "url": "https://github.com/mcgoo/vcpkg-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
      "name": "version_check",
      "version": "0.9.5",
      "description": "Tiny crate to check the version of the installed/running rustc.",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/version_check@0.9.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/version_check/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/SergioBenitez/version_check"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#walkdir@2.5.0",
      "name": "walkdir",
      "version": "2.5.0",
      "description": "Recursively walk a directory.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/walkdir@2.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/walkdir/"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/walkdir"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/walkdir"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasi@0.11.0+wasi-snapshot-preview1",
      "name": "wasi",
      "version": "0.11.0+wasi-snapshot-preview1",
      "description": "Experimental WASI API bindings for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/wasi@0.11.0+wasi-snapshot-preview1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasi"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bytecodealliance/wasi"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-backend@0.2.95",
      "name": "wasm-bindgen-backend",
      "version": "0.2.95",
      "description": "Backend code generation of the wasm-bindgen tool ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-backend@0.2.95",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen-backend"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/backend"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro-support@0.2.95",
      "name": "wasm-bindgen-macro-support",
      "version": "0.2.95",
      "description": "The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-macro-support@0.2.95",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro-support"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro@0.2.95",
      "name": "wasm-bindgen-macro",
      "version": "0.2.95",
      "description": "Definition of the `#[wasm_bindgen]` attribute, an internal dependency ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-macro@0.2.95",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.95",
      "name": "wasm-bindgen-shared",
      "version": "0.2.95",
      "description": "Shared support between wasm-bindgen and wasm-bindgen cli, an internal dependency. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-shared@0.2.95",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen-shared"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "other",
          "url": "wasm_bindgen"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/shared"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.95",
      "name": "wasm-bindgen",
      "version": "0.2.95",
      "description": "Easy support for interacting between JS and Rust. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen@0.2.95",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#winapi-util@0.1.9",
      "name": "winapi-util",
      "version": "0.1.9",
      "description": "A dumping ground for high level safe wrappers over windows-sys.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/winapi-util@0.1.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/winapi-util"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/winapi-util"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/winapi-util"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
      "name": "windows-sys",
      "version": "0.52.0",
      "description": "Rust for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows-sys@0.52.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
      "name": "windows-sys",
      "version": "0.59.0",
      "description": "Rust for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows-sys@0.59.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
      "name": "windows-targets",
      "version": "0.52.6",
      "description": "Import libs for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows-targets@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_gnullvm@0.52.6",
      "name": "windows_aarch64_gnullvm",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_aarch64_gnullvm@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_msvc@0.52.6",
      "name": "windows_aarch64_msvc",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_aarch64_msvc@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnu@0.52.6",
      "name": "windows_i686_gnu",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_i686_gnu@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnullvm@0.52.6",
      "name": "windows_i686_gnullvm",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_i686_gnullvm@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_i686_msvc@0.52.6",
      "name": "windows_i686_msvc",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_i686_msvc@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnu@0.52.6",
      "name": "windows_x86_64_gnu",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_x86_64_gnu@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnullvm@0.52.6",
      "name": "windows_x86_64_gnullvm",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_x86_64_gnullvm@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
      "name": "windows_x86_64_msvc",
      "version": "0.52.6",
      "description": "Import lib for Windows",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/windows_x86_64_msvc@0.52.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/microsoft/windows-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#write16@1.0.0",
      "name": "write16",
      "version": "1.0.0",
      "description": "A UTF-16 analog of the Write trait",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/write16@1.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/write16/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/write16/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/write16"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#writeable@0.5.5",
      "name": "writeable",
      "version": "0.5.5",
      "description": "A more efficient alternative to fmt::Display",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/writeable@0.5.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.7.5",
      "name": "yoke-derive",
      "version": "0.7.5",
      "description": "Custom derive for the yoke crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/yoke-derive@0.7.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#yoke@0.7.5",
      "name": "yoke",
      "version": "0.7.5",
      "description": "Abstraction allowing borrowed data to be carried along with the backing data it borrows from",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/yoke@0.7.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.7.35",
      "name": "zerocopy-derive",
      "version": "0.7.35",
      "description": "Custom derive for traits from the zerocopy crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-2-Clause OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zerocopy-derive@0.7.35",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/google/zerocopy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.35",
      "name": "zerocopy",
      "version": "0.7.35",
      "description": "Utilities for zero-copy parsing and serialization",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-2-Clause OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zerocopy@0.7.35",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/google/zerocopy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.5",
      "name": "zerofrom-derive",
      "version": "0.1.5",
      "description": "Custom derive for the zerofrom crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerofrom-derive@0.1.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.5",
      "name": "zerofrom",
      "version": "0.1.5",
      "description": "ZeroFrom trait for constructing",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerofrom@0.1.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.10.3",
      "name": "zerovec-derive",
      "version": "0.10.3",
      "description": "Custom derive for the zerovec crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerovec-derive@0.10.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4",
      "name": "zerovec",
      "version": "0.10.4",
      "description": "Zero-copy vector backed by a byte array",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079"
        }
      ],
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerovec@0.10.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zip@2.2.1",
      "name": "zip",
      "version": "2.2.1",
      "description": "Library to support the reading and writing of zip files. ",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "99d52293fc86ea7cf13971b3bb81eb21683636e7ae24c729cdaf1b7c4157a352"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/zip@2.2.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/zip-rs/zip2.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zopfli@0.8.1",
      "name": "zopfli",
      "version": "0.8.1",
      "description": "A Rust implementation of the Zopfli compression algorithm.",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e5019f391bac5cf252e93bbcc53d039ffd62c7bfb7c150414d61369afe57e946"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/zopfli@0.8.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/zopfli-rs/zopfli"
        },
        {
          "type": "vcs",
          "url": "https://github.com/zopfli-rs/zopfli"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@7.2.1",
      "name": "zstd-safe",
      "version": "7.2.1",
      "description": "Safe low-level bindings for the zstd compression library.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "54a3ab4db68cea366acc5c897c7b4d4d1b8994a9cd6e6f841f8964566a419059"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/zstd-safe@7.2.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/gyscos/zstd-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
      "name": "zstd-sys",
      "version": "2.0.13+zstd.1.5.6",
      "description": "Low-level bindings for the zstd compression library.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "38ff0f21cfee8f97d94cef41359e0c89aa6113028ab0291aa8ca0038995a95aa"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/zstd-sys@2.0.13+zstd.1.5.6",
      "externalReferences": [
        {
          "type": "other",
          "url": "zstd"
        },
        {
          "type": "vcs",
          "url": "https://github.com/gyscos/zstd-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zstd@0.13.2",
      "name": "zstd",
      "version": "0.13.2",
      "description": "Binding for the zstd compression library.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "fcf2b778a664581e31e389454a7072dab1647606d44f7feea22cd5abb9c9f3f9"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/zstd@0.13.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/zstd"
        },
        {
          "type": "vcs",
          "url": "https://github.com/gyscos/zstd-rs"
        }
      ]
    }
  ],
  "dependencies": [
    {
      "ref": "path+file:///root/secure_coding/backend#backend_rspass@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-cors@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-web-httpauth@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#dotenv@0.15.0",
        "registry+https://github.com/rust-lang/crates.io-index#env_logger@0.11.5",
        "registry+https://github.com/rust-lang/crates.io-index#jsonwebtoken@9.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#rusqlite@0.32.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa@5.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa-actix-web@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa-swagger-ui@8.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#uuid@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#validator@0.19.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-codec@0.5.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.12",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-cors@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#derive_more@0.99.18",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-http@3.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-codec@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#actix-rt@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-service@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#brotli@6.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#bytestring@1.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#derive_more@0.99.18",
        "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
        "registry+https://github.com/rust-lang/crates.io-index#flate2@1.0.35",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.26",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
        "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#language-tags@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#local-channel@0.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.12",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#zstd@0.13.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-macros@0.2.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-router@0.5.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytestring@1.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#regex-lite@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-rt@2.10.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-macros@0.2.4",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-server@2.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-rt@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-service@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-service@2.0.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#local-waker@0.1.4",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-web-codegen@4.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-router@0.5.3",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-web-httpauth@0.8.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-codec@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#actix-http@3.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-macros@0.2.4",
        "registry+https://github.com/rust-lang/crates.io-index#actix-router@0.5.3",
        "registry+https://github.com/rust-lang/crates.io-index#actix-rt@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-server@2.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#actix-service@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#actix-utils@3.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#actix-web-codegen@4.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#bytestring@1.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#cookie@0.16.2",
        "registry+https://github.com/rust-lang/crates.io-index#derive_more@0.99.18",
        "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#impl-more@0.1.8",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#language-tags@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#regex-lite@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
        "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
        "registry+https://github.com/rust-lang/crates.io-index#time@0.3.36",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#addr2line@0.24.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#gimli@0.31.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.35"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#alloc-no-stdlib@2.0.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#alloc-stdlib@0.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#alloc-no-stdlib@2.0.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anstream@0.6.18",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.10",
        "registry+https://github.com/rust-lang/crates.io-index#anstyle-parse@0.2.6",
        "registry+https://github.com/rust-lang/crates.io-index#anstyle-query@1.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#anstyle-wincon@3.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#colorchoice@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#is_terminal_polyfill@1.70.1",
        "registry+https://github.com/rust-lang/crates.io-index#utf8parse@0.2.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle-parse@0.2.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#utf8parse@0.2.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle-query@1.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle-wincon@3.0.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.10",
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.10",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#arbitrary@1.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#derive_arbitrary@1.4.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#backtrace@0.3.74",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#addr2line@0.24.2",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#object@0.36.5",
        "registry+https://github.com/rust-lang/crates.io-index#rustc-demangle@0.1.24",
        "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#brotli-decompressor@4.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#alloc-no-stdlib@2.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#alloc-stdlib@0.2.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#brotli@6.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#alloc-no-stdlib@2.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#alloc-stdlib@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#brotli-decompressor@4.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.16.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bytestring@1.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.32",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#colorchoice@1.0.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#convert_case@0.4.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cookie@0.16.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#time@0.3.36",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.16",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#deranged@0.3.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#derive_arbitrary@1.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#derive_more@0.99.18",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#convert_case@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#dotenv@0.15.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#env_filter@0.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#env_logger@0.11.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#anstream@0.6.18",
        "registry+https://github.com/rust-lang/crates.io-index#anstyle@1.0.10",
        "registry+https://github.com/rust-lang/crates.io-index#env_filter@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#humantime@2.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fallible-iterator@0.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fallible-streaming-iterator@0.1.9",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.0.35",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
        "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.72",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#wasi@0.11.0+wasi-snapshot-preview1",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.95"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#gimli@0.31.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.26",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.12",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashlink@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hermit-abi@0.3.9",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.9.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#humantime@2.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_collections@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locid@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#litemap@0.7.4",
        "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#writeable@0.5.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locid_transform@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_locid@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_locid_transform_data@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_provider@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locid_transform_data@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_collections@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_properties@1.5.1",
        "registry+https://github.com/rust-lang/crates.io-index#icu_provider@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#utf16_iter@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#write16@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties@1.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_collections@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_locid_transform@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_provider@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_provider@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_locid@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_provider_macros@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#writeable@0.5.5",
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_provider_macros@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_properties@1.5.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#impl-more@0.1.8",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#is_terminal_polyfill@1.70.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.32",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.72",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.95"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#jsonwebtoken@9.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
        "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.72",
        "registry+https://github.com/rust-lang/crates.io-index#pem@3.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
        "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.6.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#language-tags@0.3.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.30.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#litemap@0.7.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#local-channel@0.1.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#local-waker@0.1.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#local-waker@0.1.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lockfree-object-pool@0.1.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#mime_guess@2.0.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
        "registry+https://github.com/rust-lang/crates.io-index#unicase@2.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hermit-abi@0.3.9",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#wasi@0.11.0+wasi-snapshot-preview1",
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#object@0.36.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#redox_syscall@0.5.7",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pem@3.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.20",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.35"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.20",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#redox_syscall@0.5.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
        "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-lite@0.1.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
        "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
        "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
        "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rusqlite@0.32.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#fallible-iterator@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#fallible-streaming-iterator@0.1.9",
        "registry+https://github.com/rust-lang/crates.io-index#hashlink@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#libsqlite3-sys@0.30.1",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rust-embed-impl@8.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#rust-embed-utils@8.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
        "registry+https://github.com/rust-lang/crates.io-index#walkdir@2.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rust-embed-utils@8.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#walkdir@2.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rust-embed@8.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rust-embed-impl@8.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#rust-embed-utils@8.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#walkdir@2.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustc-demangle@0.1.24",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.23"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#same-file@1.0.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#winapi-util@0.1.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.23",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.215"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.215",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.6.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#time@0.3.36"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.18",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#time@0.3.36",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#deranged@0.3.11",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.7.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.41.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#backtrace@0.3.74",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.166",
        "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.3",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.2",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.8",
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.33"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.17.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unicase@2.8.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.14",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utf16_iter@1.0.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utf8parse@0.2.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-actix-web@0.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-service@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa@5.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-gen@5.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-swagger-ui-vendored@0.1.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa-swagger-ui@8.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#actix-web@4.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#mime_guess@2.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#rust-embed@8.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa@5.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa-swagger-ui-vendored@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#zip@2.2.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utoipa@5.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
        "registry+https://github.com/rust-lang/crates.io-index#utoipa-gen@5.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#uuid@1.11.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#validator@0.19.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.133",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#validator_derive@0.19.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#validator_derive@0.19.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#vcpkg@0.2.15",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#walkdir@2.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#same-file@1.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#winapi-util@0.1.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasi@0.11.0+wasi-snapshot-preview1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-backend@0.2.95",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.16.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.95"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro-support@0.2.95",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-backend@0.2.95",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.95"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro@0.2.95",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro-support@0.2.95"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.95",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.95",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro@0.2.95"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#winapi-util@0.1.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.52.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows-sys@0.59.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows-targets@0.52.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_gnullvm@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_msvc@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnu@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnullvm@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_i686_msvc@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnu@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnullvm@0.52.6",
        "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_gnullvm@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_aarch64_msvc@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnu@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_i686_gnullvm@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_i686_msvc@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnu@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_gnullvm@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#windows_x86_64_msvc@0.52.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#write16@1.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#writeable@0.5.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.7.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
        "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#yoke@0.7.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.215",
        "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.7.35",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.7.35",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerocopy-derive@0.7.35"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89",
        "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.10.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.92",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.37",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.89"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.10.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.10.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zip@2.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#arbitrary@1.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.20",
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#flate2@1.0.35",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#zopfli@0.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zopfli@0.8.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.16.0",
        "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.4.2",
        "registry+https://github.com/rust-lang/crates.io-index#lockfree-object-pool@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.22",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.20.2",
        "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@7.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zstd-sys@2.0.13+zstd.1.5.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#pkg-config@0.3.31"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zstd@0.13.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zstd-safe@7.2.1"
      ]
    }
  ]
}